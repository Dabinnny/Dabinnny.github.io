{"componentChunkName":"component---src-templates-blog-post-js","path":"/Database/s1/","result":{"data":{"site":{"siteMetadata":{"title":"DABI_devlog","author":"[DABIN SEO]","siteUrl":"https://Dabinnny.github.io","comment":{"disqusShortName":"","utterances":"Dabinnny/Dabinnny.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"1260fc12-5113-5bae-934a-7392b2715163","excerpt":"❓ SQL 문제 풀이 (JOIN문) 문제 바로가기   일단 문제 이름 합격.    문제에서 2개의 table이 주어지고 JOIN을 이용해서 푸는 문제이다.   1. ANIMAL_INS  테이블은 동물 보호소에 들어온 동물의 정보를 담은 테이블이다.  테이블 구조는 다음과 같으며 , , , , , 는 각각 동물의 , , , , , 를 나타낸다.   2. ANIMAL_OUTS…","html":"<h1 id=\"-sql-문제-풀이-join문\" style=\"position:relative;\"><a href=\"#-sql-%EB%AC%B8%EC%A0%9C-%ED%92%80%EC%9D%B4-join%EB%AC%B8\" aria-label=\" sql 문제 풀이 join문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>❓ SQL 문제 풀이 (JOIN문)</h1>\n<p><a href=\"https://programmers.co.kr/learn/courses/30/lessons/59043\">문제 바로가기</a>  </p>\n<p>일단 문제 이름 합격.   </p>\n<p>문제에서 2개의 table이 주어지고 JOIN을 이용해서 푸는 문제이다.  </p>\n<br/> \n<img src=\"https://user-images.githubusercontent.com/90162819/163144908-cd33474b-dd43-4962-9a69-af13ea4f0795.png\">\n<br/> \n<img src=\"https://user-images.githubusercontent.com/90162819/163144918-a85c6f10-1e81-4f3e-9a6f-f11f50b41689.png\">\n<br/> \n<br/> \n<h3 id=\"1-animal_ins\" style=\"position:relative;\"><a href=\"#1-animal_ins\" aria-label=\"1 animal_ins permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. ANIMAL_INS</h3>\n<p><code class=\"language-text\">ANIMAL_INS</code> 테이블은 동물 보호소에 들어온 동물의 정보를 담은 테이블이다.<br>\n<code class=\"language-text\">ANIMAL_INS</code> 테이블 구조는 다음과 같으며<br>\n<code class=\"language-text\">ANIMAL_ID</code>, <code class=\"language-text\">ANIMAL_TYPE</code>, <code class=\"language-text\">DATETIME</code>, <code class=\"language-text\">INTAKE_CONDITION</code>, <code class=\"language-text\">NAME</code>, <code class=\"language-text\">SEX_UPON_INTAKE</code>는<br>\n각각 동물의 <code class=\"language-text\">아이디</code>, <code class=\"language-text\">생물 종</code>, <code class=\"language-text\">보호 시작일</code>, <code class=\"language-text\">보호 시작 시 상태</code>, <code class=\"language-text\">이름</code>, <code class=\"language-text\">성별 및 중성화 여부</code>를 나타낸다.  </p>\n<br/> \n<img src=\"https://user-images.githubusercontent.com/90162819/163141012-6ea3e36e-8c29-42a1-bc2a-9e1b56f1c288.png\">\n<br/>  \n<h3 id=\"2-animal_outs\" style=\"position:relative;\"><a href=\"#2-animal_outs\" aria-label=\"2 animal_outs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. ANIMAL_OUTS</h3>\n<p><code class=\"language-text\">ANIMAL_OUTS</code> 테이블은 동물 보호소에서 입양 보낸 동물의 정보를 담은 테이블이다.<br>\n<code class=\"language-text\">ANIMAL_OUTS</code> 테이블 구조는 다음과 같으며<br>\n<code class=\"language-text\">ANIMAL_ID</code>, <code class=\"language-text\">ANIMAL_TYPE</code>, <code class=\"language-text\">DATETIME</code>, <code class=\"language-text\">NAME</code>, <code class=\"language-text\">SEX_UPON_INTAKE</code>는<br>\n각각 동물의 <code class=\"language-text\">아이디</code>, <code class=\"language-text\">생물 종</code>, <code class=\"language-text\">입양일</code>, <code class=\"language-text\">이름</code>, <code class=\"language-text\">성별 및 중성화 여부</code>를 나타낸다.<br>\n<code class=\"language-text\">ANIMAL_OUTS</code> 테이블의 <code class=\"language-text\">ANIMAL_ID</code>는 <code class=\"language-text\">ANIMAL_INS</code>의 <code class=\"language-text\">ANIMAL_ID</code>의 외래 키이다.  </p>\n<br/> \n<img src=\"https://user-images.githubusercontent.com/90162819/163141402-28d05300-e0bd-438c-8813-d869d08bfc53.png\">\n<br/> \n<h2 id=\"문제풀이\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C%ED%92%80%EC%9D%B4\" aria-label=\"문제풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제풀이</h2>\n<p>두 개의 테이블(<code class=\"language-text\">ANIMAL_INS</code>, <code class=\"language-text\">ANIMAL_OUTS</code>)이 주어지고 들어온 날짜보다 나간 날짜가 더 빠른 데이터의 ID와 NAME을 출력한다.</p>\n<br/> \n<p>테이블 <code class=\"language-text\">ANIMAL_INS</code>, <code class=\"language-text\">ANIMAL_OUTS</code>가 있다고 하면 테이블 ‘ANIMAL<em>INS LEFT JOIN ON ANIMAL</em>OUTS’ 와의 공통 키이다.<br>\n= 테이블 <code class=\"language-text\">ANIMAL_INS</code>의 모든 데이터 + 테이블 <code class=\"language-text\">ANIMAL_OUTS</code>에서 <code class=\"language-text\">ANIMAL_INS</code>와 공통키로 일치하는 데이터가 뒤에 붙는다. </p>\n<br/> \n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span>I<span class=\"token punctuation\">.</span>ANIMAL_ID<span class=\"token punctuation\">,</span> I<span class=\"token punctuation\">.</span>NAME<span class=\"token operator\">*</span>\n<span class=\"token keyword\">FROM</span> ANIMAL_INS I\n<span class=\"token keyword\">LEFT</span> <span class=\"token keyword\">JOIN</span> ANIMAL_OUTS O\n<span class=\"token keyword\">ON</span> I<span class=\"token punctuation\">.</span>ANIMAL_ID <span class=\"token operator\">=</span> O<span class=\"token punctuation\">.</span>ANIMAL_ID <span class=\"token punctuation\">;</span></code></pre></div>\n<br/> \n<p>결과로는 아래와 같다.  </p>\n<br/> \n<img src=\"https://user-images.githubusercontent.com/90162819/163143504-812f80f2-c335-4f12-972c-6f2f31d64479.png\">   \n<br/> \n<br/> \n<p>보호 시작일보다 입양일이 더 빠른 동물의 아이디와 이름을 조회해야 하므로,<br>\n<code class=\"language-text\">ANIMAL_INS</code>의 <code class=\"language-text\">DATETIME</code>이 더 크게 조건을 걸어주고 정렬해주면 된다.  </p>\n<p>최종 코드와 실행결과는 아래와 같다.</p>\n<br/> \n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> I<span class=\"token punctuation\">.</span>ANIMAL_ID<span class=\"token punctuation\">,</span> I<span class=\"token punctuation\">.</span>NAME\n<span class=\"token keyword\">FROM</span> ANIMAL_INS I\n<span class=\"token keyword\">LEFT</span> <span class=\"token keyword\">JOIN</span> ANIMAL_OUTS O\n<span class=\"token keyword\">ON</span> I<span class=\"token punctuation\">.</span>ANIMAL_ID <span class=\"token operator\">=</span> O<span class=\"token punctuation\">.</span>ANIMAL_ID\n<span class=\"token keyword\">WHERE</span> I<span class=\"token punctuation\">.</span><span class=\"token keyword\">DATETIME</span> <span class=\"token operator\">></span> O<span class=\"token punctuation\">.</span><span class=\"token keyword\">DATETIME</span>\n<span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> I<span class=\"token punctuation\">.</span><span class=\"token keyword\">DATETIME</span> <span class=\"token punctuation\">;</span></code></pre></div>\n<img src=\"https://user-images.githubusercontent.com/90162819/163143481-53a25322-92c5-402e-9d71-ed59c9daed11.png\">","frontmatter":{"title":"[programmers] 있었는데요 없었습니다 (JOIN)","date":"April 13, 2022"}}},"pageContext":{"slug":"/Database/s1/","previous":{"fields":{"slug":"/ML/tree/"},"frontmatter":{"title":"Tree Based Model(1) - XGBoost, LigntGBM"}},"next":{"fields":{"slug":"/DataStructure/백트래킹/"},"frontmatter":{"title":"백트래킹(Backtracking) 이해하기"}}}},"staticQueryHashes":["3128451518","635777304"]}